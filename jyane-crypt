#!/bin/bash

# This is a command-line tool for crypt/decrypt files.
#
# Usage:
#     jyane-crypt command
#
# Command:
#     - crypt
#         crypt file.
#     - decrypt
#         decrypt file.

# The MIT License (MIT)
#
# Copyright (c) 2014 Shohei KAMIMORI
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

source "$(dirname "${BASH_SOURCE}")"/imosh/imosh || exit 1
eval "${IMOSH_INIT}"

# _get_password() {
  # if [ -r "${HOME}/.jyane-crypt-config" ]; then
    # echo 'a'
  # else
    # echo 'b'
  # fi
# }

# _decrypt() {
  # echo 'b'
# }

# _encrypt() {
  # echo 'c'
# }

main() {
  local command="$1"

  if type "_${command}" >/dev/null 2>/dev/null; then
    # TODO(jyane): implement methods.
    "_${command}"
  else
    LOG FATAL "No such command: ${command}"
  fi
}

if [ "$#" -eq 1 ]; then
    main "$1"
else
    LOG FATAL 'Arguments error.'
fi
